import {Component, OnDestroy, OnInit} from '@angular/core';
import {NbMenuItem, NbMenuService} from '@nebular/theme';
import {Subject} from 'rxjs';
import {Store} from '@ngxs/store';
import {ChangeCategory} from '@shared/stores/project-state/project-state.actions';
import {Category} from '@shared/models/category.model';
import {untilDestroyed} from 'ngx-take-until-destroy';

@Component({
  selector: 'app-pentest-categories',
  templateUrl: './pentest-categories.component.html',
  styleUrls: ['./pentest-categories.component.scss']
})
export class PentestCategoriesComponent implements OnInit, OnDestroy {
  items: NbMenuItem[] = [
    {
      title: 'Information gathering',
    },
    {
      title: 'Configuration and deploy management testing',
    },
    {
      title: 'Identity Management testing',
    },
    {
      title: 'Authentication Testing',
    },
    {
      title: 'Authorization Testing',
    },
    {
      title: 'Session Management Testing',
    },
    {
      title: 'Input Validation Testing',
    },
    {
      title: 'Error Handling',
    },
    {
      title: 'Cryptography',
    },
    {
      title: 'Business Logic Testing',
    },
    {
      title: 'Client Side testing',
    },
  ];

  private destroy$ = new Subject<void>();
  selectedItem: string;

  constructor(private store: Store,
              private menuService: NbMenuService) {
  }

  ngOnInit(): void {
    this.menuService.onItemClick()
      .pipe(
        untilDestroyed(this)
      )
      .subscribe((menuBag) => {
        this.selectedItem = menuBag.item.title;
        // ToDo: map selectedItem title to corresponding category
        this.store.dispatch(new ChangeCategory(Category.CRYPTOGRAPHY));
      });
  }

  // tslint:disable-next-line:typedef
  ngOnDestroy() {
    this.destroy$.next();
    this.destroy$.complete();
  }

}
